name: Build Tauri App Android (Multiarch)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  android:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target_rust: aarch64-linux-android
            target_short: aarch64
          - target_rust: armv7-linux-androideabi
            target_short: armv7
          - target_rust: x86_64-linux-android
            target_short: x86_64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Setup Rust with Android target
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target_rust }}

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept Android licenses
        run: yes | sdkmanager --licenses

      - name: Install NDK and build-tools
        run: |
          sdkmanager "ndk;25.2.9519653" "platforms;android-33" "build-tools;33.0.2"
          echo "NDK_HOME=$ANDROID_SDK_ROOT/ndk/25.2.9519653" >> $GITHUB_ENV

      - name: Install frontend dependencies
        run: npm i -g pnpm && pnpm install

      - name: Initialize Android project (if needed)
        run: pnpm tauri android init || true

      - name: Ls Android project
        run: ls -la src-tauri/gen/android && cat src-tauri/gen/android/app/build.gradle.kts

      - name: Set minSdkVersion to 26 in build.gradle.kts
        run: sed -i 's/minSdkVersion([0-9]\+)/minSdkVersion(26)/' src-tauri/gen/android/build.gradle.kts

      - name: Set minSdkVersion to 26
        run: |
          GRADLE_FILE=$(find src-tauri/gen/android -name build.gradle | head -n 1)
          echo "Patching $GRADLE_FILE..."
          sed -i 's/minSdkVersion [0-9]\+/minSdkVersion 26/' "$GRADLE_FILE"

      - name: Build APK for ${{ matrix.target_short }}
        run: pnpm tauri android build --target ${{ matrix.target_short }}

      - name: Rename APK for release
        run: |
          APP_NAME=$(node -p "require('./src-tauri/tauri.conf.json').productName || 'app'")
          RAW_VERSION=${{ github.ref_name }}
          VERSION="_${RAW_VERSION#v}"   
          mkdir -p apk
          find src-tauri/gen/android -name "*.apk" -exec cp {} apk/${APP_NAME,,}-${{ matrix.target_short }}-${VERSION}.apk \;

      - name: Upload APKs to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: apk/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
